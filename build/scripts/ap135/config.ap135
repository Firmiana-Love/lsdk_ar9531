#
# Copyright (c) 2013 Qualcomm Atheros, Inc.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

# Set the toolchain path
export TOOLCHAIN=buildroot-2009.08
export TOOLPREFIX=mips-linux-uclibc-
export TOOLARCH=build_mips/staging_dir/usr
export UBOOT_GCC_4_3_3_EXTRA_CFLAGS=-fPIC

export KERNEL=mips-linux-2.6.31
export KERNELVER=2.6.31
export KERNELTARGET=vmlinux.bin
export COMPRESSKERNEL=y
export KERNELARCH=mips

export CONFIG_MIPS_74K_KERNEL_OPTIMIZATION=1
ifeq ($(BOOT_FROM_NAND),1) #{
# should be multiple of 128k
export TARGETFSSIZE=5242880
export ATH_CAL_NAND_FLASH=1
export ATH_CAL_NAND_PARTITION="caldata"
else #}{
ifeq ($(ATH_DUAL_FLASH),1) #{
export TARGETFSSIZE=5242880
export ATH_CAL_NAND_FLASH=1
export ATH_CAL_NAND_PARTITION="caldata"
else #}{
export TARGETFSSIZE=2818048
endif #}
endif #}

ifeq ($(BUILD_CONFIG),_powercloud) #{
export TARGETFSSIZE=3014656
endif #}

export BUSYBOX=busybox-1.01
export WIRELESSTOOLS=wireless_tools.29
export WIRELESSTOOLSLIB=libiw.so.29

ifeq ($(USE_GCC_4_5_1), y) #{
export TOOLCHAIN=gcc-4.5.1
export ENABLE_DSP_ASE=y
endif #}

ifeq ($(BUILD_WLAN_PBO_DATA),y) #{
export GCOV_KERNEL_ENABLE=y
export WLAN_PBO_DATA_PATH=$(TOPDIR)/build/scripts/$(CFG_BOARD_TYPE)/pbo_data/wlan
endif #}

ifeq ($(USE_WLAN_PBO_DATA),y) #{
export GCOV_KERNEL_ENABLE=y
export WLAN_PBO_DATA_PATH=$(TOPDIR)/build/scripts/$(CFG_BOARD_TYPE)/pbo_data/wlan
endif #}

export BUS=dual
export AP_TYPE=dual

export MADWIFITARGET=mipsisa32-be-elf
export FUSIONTARGET=mipsisa32-be-elf
export TARGETARCH=mipsisa32-be-elf

# Ethernet defines
export ATH_GMAC_DRIVER=1
export GMAC_QCA955x=1
export ETH_CONFIG=_s17
export ATH_GMAC_GE0_IS_CONNECTED=1
export ATH_GMAC_GE1_IS_CONNECTED=1
export ATH_GMAC0_MII=ATHR_RGMII
export ATH_GMAC1_MII=ATHR_SGMII
#sgmii defines
export ATH_CFG_SGMII=1
export ATH_CONFIG_SWAP_SGMII=0
export ATH_S17_PHY0_WAN=1
export ATH_SGMII_FORCED=1
export ATH_S17_MAC0_SGMII=1
export FLASH_SIZE=16
export ATH_RGMII_CAL=1
export ATH_GMAC_DESC_SRAM=1
export WPS_LED_GPIO_PIN=15
export AP_USB_LED_GPIO=11
export ATH_GMAC_RX_TASKLET=1
export ATH_GMAC_RX_PKT_CNT=160
export ATH_GMAC1_RXFCTL=1
export ATH_GMAC1_TXFCTL=1
export ATH_GMAC0_RXFCTL=1
export ATH_GMAC0_TXFCTL=1
export ATH_GMAC0_TX_CNT=128
export ATH_GMAC0_RX_CNT=224
export ATH_GMAC1_TX_CNT=128
export ATH_GMAC1_RX_CNT=224
export ATH_GMAC_HW_QOS=0
export ATH_GMAC_RXTIMER=0
export ATH_GMAC_RXTIMER_FREQ=500
export ATH_GMAC_LEN_PER_TX_DS=1536
export ATH_GMAC_LOCATION=0xbfff0000
export ATH_SUPPORT_VLAN=1

# For S17 H/W Accelerator
ifeq ($(ETH_CONFIG),_s17_hwaccel) #{
export BUILD_CONFIG=_routing
endif #}

# For db12x S27 H/W Accelerator
ifeq ($(BUILD_CONFIG),_hwaccel) #{
export ATH_GMAC_SOC_HW_ACL=1
export ATH_GMAC_SOC_HW_NAT=1
endif #}

# For ap123 S27 H/W Accelerator
ifeq ($(BUILD_CONFIG),_ap123_hwaccel) #{
export ATH_GMAC_HW_ACL=1
export ATH_GMAC_HW_NAT=1
endif #}

# For software NAT
ifeq ($(BUILD_CONFIG),_routing) #{
ifneq ($(BUILD_S17HNAT),1) #{
#enable host decap feature for buf
export PERE_IP_HDR_ALIGNMENT_WAR=1
endif #}
endif #}

ifeq ($(BUILD_SAMBA),y) #{
export SAMBA_MIPS_74K_CFLAGS=-funit-at-a-time -Os -pipe -march=74kc -mtune=74kc
#Populate the utilities to be removed
sbin_list1=sbin/802* sbin/apst* sbin/ath* sbin/ifr* sbin/iwe*
sbin_list2=sbin/iwsp* sbin/iwli* sbin/radar* sbin/iwge* sbin/pktl*
samba_list=usr/local/bin/* usr/local/sbin/nmb* usr/local/sbin/smb*nt
export INSTALL_BLACKLIST="usr/bin/gdb* $(sbin_list1) $(sbin_list2) $(samba_list)"
endif #}

export CONFIG_I2S=1
export KBUILD_MODPOST_WARN=y
ifeq ($(CONFIG_I2S),1) #{
export ATH_WASP_I2S=1
endif #}

export JUMPSTART_GPIO=16

ifeq (,$(findstring $(WLAN_BUILD_TYPE), full))
    WLAN_BUILD_TYPE=perf
endif
ifeq ($(UNIFIED_SMARTANTENNA),1)
    BUILD_SUFFIX=_smartantenna
endif

ifeq ($(CONFIG_TYPE),wrap)
    BUILD_SUFFIX=_wrap
endif
export BUILD_EXT=_11ac_offload$(ETH_CONFIG)$(ETH_CONFIG2)$(BUILD_SUFFIX)

export AH_CAL_RADIOS_PCI=1
ifeq ($(ATH_CAL_NAND_FLASH),1) #{
    export AH_CAL_LOCATIONS_PCI=0x4000
else #}{
    export AH_CAL_LOCATIONS_PCI=0xbfff4000
endif #}
export AH_CAL_IN_FLASH_AHB=1
export AH_CAL_RADIOS_AHB=1
ifeq ($(ATH_CAL_NAND_FLASH),1) #{
    export AH_CAL_LOCATIONS_AHB=0x0
else #}{
    export AH_CAL_LOCATIONS_AHB=0xbfff0000
endif #}

#smart antenna options
export ATH_GPIOPIN_ANT_SERIAL_STROBE=0
export ATH_GPIOFUNC_ANT_SERIAL_STROBE=71
export ATH_GPIOPIN_ANT_SERIAL_DATA=1
export ATH_GPIOFUNC_ANT_SERIAL_DATA=72
export ATH_GPIOPIN_ANTCHAIN0=1
export ATH_GPIOPIN_ANTCHAIN1=2
export ATH_GPIOPIN_ANTCHAIN2=3
export ATH_GPIOFUNC_ANTCHAIN0=0x47
export ATH_GPIOFUNC_ANTCHAIN1=0x48
export ATH_GPIOFUNC_ANTCHAIN2=0x28
export ATH_GPIOPIN_ANT_SERIAL_STROBE_RADIO1=2
export ATH_GPIOFUNC_ANT_SERIAL_STROBE_RADIO1=5
export ATH_GPIOPIN_ANT_SERIAL_DATA_RADIO1=3
export ATH_GPIOFUNC_ANT_SERIAL_DATA_RADIO1=5
export ATH_GPIOPIN_ANTCHAIN0_RADIO1 = 2
export ATH_GPIOPIN_ANTCHAIN1_RADIO1 = 3
export ATH_GPIOPIN_ANTCHAIN2_RADIO1 = 4
export ATH_GPIOFUNC_ANTCHAIN0_RADIO1 = 5
export ATH_GPIOFUNC_ANTCHAIN1_RADIO1 = 5
export ATH_GPIOFUNC_ANTCHAIN2_RADIO1 = 5

export BUILD_ATHR_HOSTAP=1
export BUILD_UMAC=1
export BUILD_WPA2=y
export BUILD_WPA2_NO_EXAMPLES=y
export ATH_RXBUF=512
export ATH_TXBUF=512
export AH_SUPPORT_SCORPION=1
export ATH_GEN_RANDOMNESS=1
export UMAC_SUPPORT_VOWDBG=1  
export UMAC_SUPPORT_ACFG=1

#####################################
#wlan configs
WLAN_DIR=../drivers/wlan_modules
WLAN_CONFIG_FILE=$(WLAN_DIR)/os/linux/configs/.config.wlan.all

#full feature profile is default
$(shell cat $(WLAN_DIR)/os/linux/configs/config.wlan.full > $(WLAN_CONFIG_FILE))
ifeq ($(WLAN_BUILD_TYPE),perf)
    $(shell cat $(WLAN_DIR)/os/linux/configs/config.wlan.perf > $(WLAN_CONFIG_FILE))
endif
ifeq ($(UNIFIED_SMARTANTENNA),1)
    $(shell echo UNIFIED_SMARTANTENNA=1 >> $(WLAN_CONFIG_FILE))
endif
ifeq ($(CONFIG_TYPE),wrap)
    $(shell cat $(WLAN_DIR)/os/linux/configs/config.wlan.wrap > $(WLAN_CONFIG_FILE))
endif

$(shell sed -i 's/^/export &/g' $(WLAN_CONFIG_FILE))
#include the wlan options
include $(WLAN_CONFIG_FILE)
export ATH_TxBF_DYNAMIC_LOF_ON_N_CHAIN_MASK=0

